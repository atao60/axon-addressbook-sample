<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:sf="http://www.spicefactory.org/parsley/flex"
               width="500" height="300" 
               close="closeMe()"
        >

    <s:layout>
        <s:VerticalLayout />
    </s:layout>
               
    <fx:Script><![CDATA[
        import mx.managers.PopUpManager;

        import org.axonframework.examples.addressbook.messages.command.NewAddressCommandMessage;
        import org.axonframework.examples.addressbook.model.Address;
        import org.axonframework.examples.addressbook.model.ContactModel;

        [MessageDispatcher]
        public var dispatcher:Function;


        [Inject]
        public var contactModel:ContactModel;

        [Bindable]
        public var address:Address = new Address();

        private function createAddress():void {
            var address:Address = new Address();
            address.street = inputStreet.text;
            address.city = inputCity.text;
            address.zipCode = inputZipCode.text;
            address.contactUUID = contactModel.selectedContact.uuid;
            address.contactName = contactModel.selectedContact.name;
            address.type = inputType.selectedItem.toString();
            dispatcher(new NewAddressCommandMessage(address));
            inputCity.text = "";
            inputStreet.text = "";
            inputZipCode.text = "";
            closeMe();
        }

        private function closeMe():void {
            PopUpManager.removePopUp(this)
        }

        ]]></fx:Script>

<fx:Declarations>
    <sf:Configure/>
</fx:Declarations>

    <mx:Form defaultButton="{createAddressButton}">
        <mx:FormItem id="street" label="Street">
            <mx:TextInput id="inputStreet" text="{address.street}"/>
        </mx:FormItem>
        <mx:FormItem id="zipCode" label="Zip code">
            <mx:TextInput id="inputZipCode" text="{address.zipCode}"/>
        </mx:FormItem>
        <mx:FormItem id="city" label="City">
            <mx:TextInput id="inputCity" text="{address.city}"/>
        </mx:FormItem>
        <mx:FormItem id="type" label="Type">
            <mx:ComboBox id="inputType" selectedItem="{address.type}">
                <fx:Array>
                    <fx:String>WORK</fx:String>
                    <fx:String>PRIVATE</fx:String>
                    <fx:String>VACATION</fx:String>
                </fx:Array>
            </mx:ComboBox>
        </mx:FormItem>
        <mx:HBox>
            <mx:Button id="createAddressButton" icon="@Embed(source='/assets/images/address_book.png')"
                       click="createAddress()" label="Create Address"/>
            <mx:Button id="cancelNewContactButton" icon="@Embed(source='/assets/images/address_book.png')"
                       click="closeMe()" label="Cancel"/>
        </mx:HBox>

    </mx:Form>
</s:TitleWindow>
