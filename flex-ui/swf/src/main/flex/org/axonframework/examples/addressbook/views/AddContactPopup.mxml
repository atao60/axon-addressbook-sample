<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:sf="http://www.spicefactory.org/parsley/flex"
               width="500" height="300" 
               close="closeMe()"
               title="Store contact">
               
    <s:layout>
        <s:VerticalLayout />
    </s:layout>
               
    <fx:Script><![CDATA[
        import mx.managers.PopUpManager;

        import org.axonframework.examples.addressbook.messages.command.ChangeContactNameCommandMessage;
        import org.axonframework.examples.addressbook.messages.command.NewContactCommandMessage;
        import org.axonframework.examples.addressbook.model.Contact;
        import org.axonframework.examples.addressbook.model.ContactModel;

        [MessageDispatcher]
        public var dispatcher:Function;

        [Bindable]
        [Inject]
        public var contactModel:ContactModel;

        public function addContactAction():void {
            var contact:Contact = new Contact();
            if (contactModel.selectedContact == null) {
                contact.name = contactNameInput.text;
                dispatcher(new NewContactCommandMessage(contact));
            } else {
                contact.name = contactNameInput.text;
                contact.uuid = contactModel.selectedContact.uuid;
                dispatcher(new ChangeContactNameCommandMessage(contact));
            }
            contactNameInput.text = "";
            closeMe();
        }

        private function closeMe():void {
            PopUpManager.removePopUp(this)
        }
        ]]></fx:Script>

<fx:Declarations>
    <sf:Configure/>
</fx:Declarations>

    <mx:Form defaultButton="{newContactButton}">
        <mx:FormItem label="Name">
            <mx:TextInput id="contactNameInput"
                          text="{(contactModel.selectedContact != null)?contactModel.selectedContact.name:''}"/>
        </mx:FormItem>
        <mx:HBox>
            <mx:Button id="newContactButton" icon="@Embed(source='/assets/images/address_book.png')"
                       click="addContactAction()" label="Store Contact"/>
            <mx:Button id="cancelNewContactButton" icon="@Embed(source='/assets/images/address_book.png')"
                       click="closeMe()" label="Cancel"/>
        </mx:HBox>
    </mx:Form>

</s:TitleWindow>
